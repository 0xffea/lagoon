apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: amazeeioservice-template
parameters:
  - name: BRANCH
    description: Which branch (also docker image tag) should be deployed
    required: true
  - name: AMAZEEIO_SERVICE
    description: How is this service called
    required: true
  - name: OPENSHIFT_PROJECT
    description: Name of the openshift project we are created in
    required: true
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
    name: ${AMAZEEIO_SERVICE}-${BRANCH}
  spec:
    replicas: 1
    selector:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
      deploymentconfig: ${AMAZEEIO_SERVICE}-${BRANCH}
    revisionHistoryLimit: 2
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${AMAZEEIO_SERVICE}-${BRANCH}
          deploymentconfig: ${AMAZEEIO_SERVICE}-${BRANCH}
      spec:
        containers:
        - image: ${OPENSHIFT_PROJECT}/${AMAZEEIO_SERVICE}:${BRANCH}
          name: ${AMAZEEIO_SERVICE}-${BRANCH}
          env:
          - name: GIT_REPOSITORY
            value: https://git.vshn.net/amazee/amazee_hieradata.git
          - name: GIT_USERNAME
            value: michael.schmid
          - name: GIT_PASSWORD
            value: 4ahjnuCiMKb98nmJtr3AVNR
          - name: GIT_BRANCH_PULL
            value: master
          - name: SYNC_INTERVAL
            value: '5000'
          - name: PORT
            value: '8080'
          - name: NODE_ENV
            value: development
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 3
            failureThreshold: 5
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 200m
              memory: 200Mi
        - image: ${OPENSHIFT_PROJECT}/${AMAZEEIO_SERVICE}:${BRANCH}
          name: ${AMAZEEIO_SERVICE}-${BRANCH}-testhiera
          env:
          - name: GIT_REPOSITORY
            value: https://github.com/amazeeio/api-test-hiera.git
          - name: GIT_USERNAME
            value: 3dfc013c579f85bbcd4cd0c5d11cda325a086ec8
          - name: GIT_PASSWORD
            value: x-oauth-basic
          - name: GIT_BRANCH_PULL
            value: master
          - name: SYNC_INTERVAL
            value: '5000'
          - name: PORT
            value: '8081'
          - name: NODE_ENV
            value: development
          ports:
          - containerPort: 8081
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /status
              port: 8081
            initialDelaySeconds: 3
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /status
              port: 8081
            initialDelaySeconds: 60
            timeoutSeconds: 3
            failureThreshold: 5
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 200m
              memory: 200Mi
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${AMAZEEIO_SERVICE}-${BRANCH}
        from:
          kind: ImageStreamTag
          name: ${AMAZEEIO_SERVICE}:${BRANCH}
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${AMAZEEIO_SERVICE}-${BRANCH}-testhiera
        from:
          kind: ImageStreamTag
          name: ${AMAZEEIO_SERVICE}:${BRANCH}
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
    name: ${AMAZEEIO_SERVICE}-${BRANCH}
  spec:
    ports:
    - name: 8080-tcp
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
      deploymentconfig: ${AMAZEEIO_SERVICE}-${BRANCH}
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
    name: ${AMAZEEIO_SERVICE}-${BRANCH}-testhiera
  spec:
    ports:
    - name: 8081-tcp
      port: 80
      protocol: TCP
      targetPort: 8081
    selector:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
      deploymentconfig: ${AMAZEEIO_SERVICE}-${BRANCH}
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
    name: ${AMAZEEIO_SERVICE}-${BRANCH}
  spec:
    host: ${AMAZEEIO_SERVICE}-${BRANCH}.appuio.amazeeio.review
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${AMAZEEIO_SERVICE}-${BRANCH}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
    name: ${AMAZEEIO_SERVICE}-${BRANCH}-testhiera
  spec:
    host: ${AMAZEEIO_SERVICE}-${BRANCH}-testhiera.appuio.amazeeio.review
    port:
      targetPort: 8081-tcp
    to:
      kind: Service
      name: ${AMAZEEIO_SERVICE}-${BRANCH}-testhiera
