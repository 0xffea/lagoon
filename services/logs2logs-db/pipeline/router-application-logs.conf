input {
  udp {
    port => 5140
    queue_size => 5000
    receive_buffer_bytes => 26214400
  }
  lumberjack {
    port => 5044
    ssl_certificate => "certs/lumberjack.cert"
    ssl_key => "certs/lumberjack.key"
    codec => json
  }
}

filter {
  if [message] =~ /^{.*}$/ {
    # message is JSON, this is an application log
    mutate {
      add_field => { "log-type" => "application-logs" }
    }
    json {
      source => "message"
    }
    if ![type] {
      mutate {
        add_field => { "type" => "noproject" }
      }
    }
  } else {
    # Not JSON, therefore a syslog and a router log entry
    mutate {
      add_field => { "log-type" => "router-logs" }
    }
    grok {
      match => ["message", "(?:%{SYSLOGTIMESTAMP:syslog_timestamp}|%{TIMESTAMP_ISO8601:timestamp8601}) %{SYSLOGPROG}: %{HAPROXYHTTPBASE}"]
    }
    grok {
      match => ["captured_request_headers", "%{URIHOST:request_header_host}\|%{GREEDYDATA:request_header_useragent}"]
    }
    grok {
      match => ["backend_name", "%{NOTSPACE:haproxy_backend}:%{NOTSPACE:openshift_project}:%{NOTSPACE:openshift_route}"]
    }
    grok {
      match => ["server_name", "pod:%{NOTSPACE:openshift_pod}:%{NOTSPACE:openshift_service}:%{NOTSPACE:openshift_pod_ip}:%{NOTSPACE:openshift_pod_port}"]
    }
    if ![openshift_project] {
      mutate {
        add_field => { "openshift_project" => "noproject" }
      }
    }
  }
}

output {
  # stdout { codec => rubydebug }
  if [log-type] == "router-logs" {
    elasticsearch {
      user => admin
      password => "${LOGSDB_ADMIN_PASSWORD}"
      hosts => ["${ELASTICSEARCH_URL}"]
      index => "router-logs-%{[openshift_project]}-%{+YYYY.MM}"
      template => "/usr/share/logstash/templates/router-logs.json"
      template_name => "router-logs"
      template_overwrite => true
    }
  } else {
    elasticsearch {
      user => admin
      password => "${LOGSDB_ADMIN_PASSWORD}"
      hosts => ["${ELASTICSEARCH_URL}"]
      index => "application-logs-%{[type]}-%{+YYYY.MM}"
      template => "/usr/share/logstash/templates/application-logs.json"
      template_name => "application-logs"
      template_overwrite => true
    }
  }

}
