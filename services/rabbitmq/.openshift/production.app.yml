apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: amazeeioservice-template
parameters:
  - name: BRANCH
    description: Which branch (also docker image tag) should be deployed
    required: true
  - name: AMAZEEIO_SERVICE
    description: How is this service called
    required: true
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${AMAZEEIO_SERVICE}-${BRANCH}-volume
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
    name: ${AMAZEEIO_SERVICE}-${BRANCH}
  spec:
    replicas: 1
    selector:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
      deploymentconfig: ${AMAZEEIO_SERVICE}-${BRANCH}
    strategy:
      type: Rolling
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${AMAZEEIO_SERVICE}-${BRANCH}
          deploymentconfig: ${AMAZEEIO_SERVICE}-${BRANCH}
      spec:
        containers:
        - image: appuio-demo2/${AMAZEEIO_SERVICE}:${BRANCH}
          name: ${AMAZEEIO_SERVICE}-${BRANCH}
          env:
          - name: HOSTNAME
            value: ${AMAZEEIO_SERVICE}
          - name: NODENAME
            value: ${AMAZEEIO_SERVICE}
          ports:
          - containerPort: 4369
            protocol: TCP
          - containerPort: 5671
            protocol: TCP
          - containerPort: 5672
            protocol: TCP
          - containerPort: 25672
            protocol: TCP
          - containerPort: 15672
            protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 5672
            initialDelaySeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
          - mountPath: /var/lib/${AMAZEEIO_SERVICE}
            name: ${AMAZEEIO_SERVICE}-${BRANCH}-volume
        volumes:
        - name: ${AMAZEEIO_SERVICE}-${BRANCH}-volume
          persistentVolumeClaim:
            claimName: ${AMAZEEIO_SERVICE}-${BRANCH}-volume
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${AMAZEEIO_SERVICE}-${BRANCH}
        from:
          kind: ImageStreamTag
          name: ${AMAZEEIO_SERVICE}:${BRANCH}
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
    name: ${AMAZEEIO_SERVICE}-${BRANCH}
  spec:
    ports:
    - name: 5672-tcp
      port: 5672
      protocol: TCP
      targetPort: 5672
    - name: 15672-tcp
      port: 80
      protocol: TCP
      targetPort: 15672
    selector:
      app: ${AMAZEEIO_SERVICE}-${BRANCH}
      deploymentconfig: ${AMAZEEIO_SERVICE}-${BRANCH}
  status:
    loadBalancer: {}
## ## No route for production right now, until https://ticket.vshn.net/browse/AMZE-329 is figured out
##- apiVersion: v1
##  kind: Route
##  metadata:
##    creationTimestamp: null
##    labels:
##      app: ${AMAZEEIO_SERVICE}-${BRANCH}
##    name: ${AMAZEEIO_SERVICE}-${BRANCH}
##  spec:
##    host: rabbitmq.amazeeio.cloud
##    port:
##      targetPort: 15672-tcp
##    to:
##      kind: Service
##      name: ${AMAZEEIO_SERVICE}-${BRANCH}
